drop database if exists notnamec_db;
create database notnamec_db;
use notnamec_db;

CREATE TABLE CLIENTE (
CLI_nCOD BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT ,
CLI_cNOME VARCHAR(70),
CLI_cRG VARCHAR(15),
CLI_nCPF BIGINT(11) UNSIGNED UNIQUE,
CLI_dDTNASC DATE,
CLI_cGENERO CHAR(1),
CLI_nTRESIDENCIAL INT(10) UNSIGNED,
CLI_nTCELULAR INT(11) UNSIGNED,
CLI_nTCOMERCIAL INT(10) UNSIGNED,
CLI_cEMAIL VARCHAR(150) UNIQUE,
CLI_cSENHA VARCHAR(20),
CLI_dDTULTIMO_ACESSO TIMESTAMP NULL DEFAULT NULL,
CLI_cSTATUS VARCHAR(10),
CLI_tPREFERENCIA TEXT DEFAULT NULL
)ENGINE = INNODB;



CREATE TABLE VENDA (
VENDA_nID BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
VENDA_nVLRTOTALVENDA DOUBLE(8,2) UNSIGNED,

VENDA_dtDTCOMPRA TIMESTAMP NULL DEFAULT NULL ,
VENDA_cCODRASTREIO VARCHAR(15),
VANDA_cSTATUS ENUM ('REALIZADA, PENDENTE, CANCELADA'),
CLI_nCOD BIGINT UNSIGNED,
FOREIGN KEY (CLI_nCOD) REFERENCES CLIENTE(CLI_nCOD)
)ENGINE = INNODB;

CREATE TABLE ENDERECO (
END_nID BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
END_nCEP INT(8) UNSIGNED,
END_cLOGRADOURO VARCHAR(250),
END_cCIDADE VARCHAR(150),
END_cBAIRRO VARCHAR(150),
END_nNUMERO VARCHAR(7),
END_cCOMPLEMENTO VARCHAR(150),
END_cTIPO VARCHAR(30),
UF_nID INT UNSIGNED
)ENGINE = INNODB;

CREATE TABLE UF (
UF_nID INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
UF_cUF CHAR(2),
UF_cDESCRICAO VARCHAR(30)
)ENGINE = INNODB;

CREATE TABLE PRODUTO (
PRODUTO_nID INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
PRODUTO_cDESC VARCHAR(50),
PRODUTO_cDESCCOMPLETA TEXT,
PRODUTO_cSTATUS VARCHAR(10),
PRODUTO_tsCRIACAO TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRODUTO_tMATERIAL TEXT
)ENGINE = INNODB;

CREATE TABLE COR(
COR_nID INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
COR_cDESC VARCHAR(20),
COR_cHEX VARCHAR(20)
)ENGINE = INNODB;

CREATE TABLE TAMANHO(
TAMANHO_nID INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
TAMANHO_cTAMANHO VARCHAR(10),
TAMANHO_cDESC VARCHAR(255)
)ENGINE = INNODB;

CREATE TABLE MODELO (
MODELO_nID BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
MODELO_cNOME VARCHAR(150),
MODELO_nVLR_VENDA DOUBLE(8,2) UNSIGNED,
MODELO_nSTATUS VARCHAR(10),
MODELO_nDESCONTO DOUBLE(8,2) UNSIGNED,
MODELO_nQTD_ESTOQUE FLOAT UNSIGNED,
MODELO_tsCRIACAO TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
COR_nID INT UNSIGNED,
TAMANHO_nID INT UNSIGNED,
PRODUTO_nID INT UNSIGNED,

FOREIGN KEY (COR_nID) REFERENCES COR(COR_nID),
FOREIGN KEY (TAMANHO_nID) REFERENCES TAMANHO(TAMANHO_nID)
)ENGINE = INNODB;

CREATE TABLE COMPRA_ESTOQUE (
COMPRA_ESTOQUE_nID BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
COMPRA_ESTOQUE_nVALORTOTAL DOUBLE(8,2) UNSIGNED,
COMPRA_ESTOQUE_dDATA DATE
)ENGINE = INNODB;

CREATE TABLE MODELO_COMPRA_ESTOQUE (
MOD_COMP_ESTOQUE_nID BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
MODELO_COMPRA_ESTOQUE_nQTD FLOAT UNSIGNED,
MODELO_COMPRA_ESTOQUE_nVALOR DECIMAL(10,2) UNSIGNED,
MODELO_nID BIGINT UNSIGNED,
COMPRA_ESTOQUE_nID BIGINT UNSIGNED,
FOREIGN KEY(MODELO_nID) REFERENCES MODELO (MODELO_nID),
FOREIGN KEY(COMPRA_ESTOQUE_nID) REFERENCES COMPRA_ESTOQUE (COMPRA_ESTOQUE_nID)
)ENGINE = INNODB;

CREATE TABLE USUARIO (
USR_nCOD INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
USR_cSTATUS VARCHAR(10),
USR_cLOGIN VARCHAR(20) UNIQUE,
USR_cSENHA VARCHAR(20),
USR_cNOME VARCHAR(100),
USR_nPERMISSAO TINYINT UNSIGNED,
USR_EMAIL VARCHAR(100)
)ENGINE = INNODB;

CREATE TABLE PREFERENCIAS_SISTEMA (
ID_PREF_SISTEMA INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
NUM_CLIQUES BIGINT UNSIGNED,
PADRAO_SISTEMA TEXT
)ENGINE = INNODB;

CREATE TABLE VENDA_PRODUTO (
VENDA_PRODUTO_nID BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
VENDA_PRODUTO_tsDT_SEPARACAO TIMESTAMP NULL DEFAULT NULL ,
VENDA_PRODUTO_QDTE FLOAT UNSIGNED,
VENDA_PRODUTO_nVLRPROD DECIMAL(10,2),
VENDA_nID BIGINT UNSIGNED,
PRODUTO_nID INT UNSIGNED,

FOREIGN KEY(VENDA_nID) REFERENCES VENDA (VENDA_nID),
FOREIGN KEY(PRODUTO_nID) REFERENCES PRODUTO (PRODUTO_nID)
)ENGINE = INNODB;


CREATE TABLE CATEGORIA (
CATEGORIA_nID INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
CATEGORIA_cDESC VARCHAR(99),
CATEGORIA_cSTATUS VARCHAR(10),
CATEGORIA_nCODPAI INT UNSIGNED NULL DEFAULT NULL
)ENGINE = INNODB;

CREATE TABLE PRODUTO_CATEGORIA (
PRODUTO_CATEGORIA_nID INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
CATEGORIA_nID INT UNSIGNED,
PRODUTO_nID INT UNSIGNED,
FOREIGN KEY(CATEGORIA_nID) REFERENCES CATEGORIA (CATEGORIA_nID),
FOREIGN KEY(PRODUTO_nID) REFERENCES PRODUTO (PRODUTO_nID)
)ENGINE = INNODB;

CREATE TABLE CLIENTE_ENDERECO (
CLI_END_nID BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
END_nID BIGINT UNSIGNED,
CLI_nCOD BIGINT UNSIGNED,
FOREIGN KEY(END_nID) REFERENCES ENDERECO (END_nID),
FOREIGN KEY(CLI_nCOD) REFERENCES CLIENTE (CLI_nCOD)
)ENGINE = INNODB;

-- CREATE TABLE VENDA_STATUS (
-- VENDA_STA_nID BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
-- STATUS_nID INT UNSIGNED,
-- VENDA_nID BIGINT UNSIGNED,
-- VENDA_STATUS_dDT_ATUALIZACAO TIMESTAMP NULL DEFAULT NULL,
-- FOREIGN KEY(VENDA_nID) REFERENCES VENDA (VENDA_nID)
-- )ENGINE = INNODB;
-- 
-- CREATE TABLE STATUS_VENDA (
-- STATUS_nID INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
-- STATUS_cDESC VARCHAR(250)
-- )ENGINE = INNODB;
-- 

ALTER TABLE ENDERECO ADD FOREIGN KEY(UF_nID) REFERENCES UF (UF_nID);
ALTER TABLE MODELO ADD FOREIGN KEY(PRODUTO_nID) REFERENCES PRODUTO (PRODUTO_nID);
-- ALTER TABLE VENDA_STATUS ADD FOREIGN KEY(STATUS_nID) REFERENCES STATUS_VENDA (STATUS_nID);-- 


INSERT INTO USUARIO VALUES (0, 'Ativo', 'gabriela', '123', 'Gabriela Bransford', 1, 'gabriela_bransford@icloud.com.br');
-- UPDATE USUARIO SET USR_cSTATUS = 'Inativo' WHERE USR_nCOD = 1;

INSERT INTO CLIENTE (CLI_cNOME,CLI_cEMAIL,CLI_cSENHA,CLI_cSTATUS)
        VALUES ('Sistema Notname','sistema@notname.com.br','123','Ativo');

SELECT MODELO_cNOME, MODELO_nVLR_VENDA, MODELO_nSTATUS, MODELO_nDESCONTO, MODELO_nQTD_ESTOQUE, COR_nID, TAMANHO_nID, MODELO.PRODUTO_nID FROM MODELO INNER JOIN PRODUTO ON PRODUTO.PRODUTO_nID = MODELO.PRODUTO_nID WHERE PRODUTO_cSTATUS LIKE 'Ativo' and MODELO_nSTATUS like 'Ativo' and MODELO_nQTD_ESTOQUE > 0 and PRODUTO.PRODUTO_nID =1;

                            



INSERT INTO CATEGORIA (CATEGORIA_cDESC,CATEGORIA_cSTATUS) VALUES ('Amarola','Ativo'),('Bela recatada e do lar','Ativo'),('Series','Ativo'),('Nerd','Ativo'), ('Believe', 'Ativo'),('Favoritas', 'Ativo');



-- INSERT INTO CATEGORIA VALUES (0, 'Peita Periculosa', 'Ativo', 1), (0, 'Raba Devastadora', 'Ativo',2);
INSERT INTO PRODUTO(PRODUTO_cDESC,PRODUTO_cDESCCOMPLETA,PRODUTO_cSTATUS,PRODUTO_tsCRIACAO,PRODUTO_tMATERIAL)
 VALUES ('Camisetas Temáticas','Produto exclusivo da nossa loja, com estampas temáticas. ','ATIVO',NOW(),'Poliester com sublimação aplicada em prensa térmica retrocolátil a 100º');
 
-- INSERT INTO PRODUTO (PRODUTO_cDESC, PRODUTO_cDESCCOMPLETA, PRODUTO_cSTATUS) VALUES ('Produto Piloto','Essa é uma descrição do produto que vai aparecer no contexto do index. Agora vamos testar um bold
--  <b>Isso é um negretto</b> <h1>Isso é um H1 gambiarrístico.</h1>','Ativo');

INSERT INTO PRODUTO_CATEGORIA (CATEGORIA_nID, PRODUTO_nID) VALUES (1,1);
INSERT INTO PRODUTO_CATEGORIA (CATEGORIA_nID, PRODUTO_nID) VALUES (2,1);

INSERT INTO TAMANHO VALUES (0, "PP", "Medidas: 50cm X 120cm"),(0, "P", "Medidas: 55cm X 125cm"),(0, "M", "Medidas: 60cm X 130cm"),
(0, "G", "Medidas: 70cm X 140cm"), (0, "GG", "Medidas: 80cm X 190cm");

INSERT INTO COR VALUES (0, "Azul", "#0000CD"), (0, "Azul Claro", "#6495ED"), (0, "Laranja", "#FF4500"),
(0, "Preto", "#000"), (0, "Branco", "#fff"), (0, "Vermelho", "#8B0000"),(0, "Laranja Claro", "#FF8C00"), 
(0, "Amarelo", "#FFFF00"), (0, "Verde", "#008000"), (0, "Marrom", "#A0522D"), (0, "Rosa", "#FF69B4"),
 (0, "Violeta", "#EE82EE");
 
 
 
 SELECT * FROM MODELO;
 SELECT * FROM COR;
 INSERT INTO MODELO(MODELO_cNOME,MODELO_nVLR_VENDA,MODELO_nSTATUS,MODELO_nDESCONTO,MODELO_nQTD_ESTOQUE,MODELO_tsCRIACAO,COR_nID,TAMANHO_nID,PRODUTO_nID)
 VALUES
 ('Camiseta Unicórnio',109.00,'Ativo',NULL,10,NOW(),3,1,1),
 ('Camiseta Mermaids',109.00,'Ativo',NULL,10,NOW(),2,2,1);
 
 INSERT INTO CATEGORIA VALUES
 (0,'LA CASA DE PAPEL','ATIVO',3),
 (0,'MR ROBOT','ATIVO',3),
 (0,'FLASH','ATIVO',3),
 (0,'ARROW','ATIVO',3);

select *, buscaDescCategoriaPai(CATEGORIA_nCODPAI) as descCategoriaPai from CATEGORIA where CATEGORIA_nCODPAI is not null;

select *,
 fn_buscaDescTamanho(TAMANHO_nID) as descTamanho, fn_buscaDescProduto(PRODUTO_nID) as descProduto, fn_buscaDescCor(COR_nID) as descCor 
 from MODELO;
 
SELECT * FROM CATEGORIA where CATEGORIA_cSTATUS = 'Ativo';


DESC MODELO;

    SELECT * FROM PRODUTO 
    INNER JOIN MODELO ON PRODUTO.PRODUTO_nID = MODELO.PRODUTO_nID
    WHERE PRODUTO_cSTATUS LIKE 'Ativo' and MODELO_nSTATUS like 'Ativo' and MODELO_nQTD_ESTOQUE > 0 and PRODUTO.PRODUTO_nID = 1;
    
    
    desc VENDA_PRODUTO;
    
    SELECT *, IF(USR_cSTATUS = 1,REPLACE( USR_cSTATUS,1,'Ativo'),REPLACE( USR_cSTATUS,0,'Inativo')) as USR_cSTATUS FROM USUARIO;

desc USUARIO;

select* from USUARIO;

SELECT MODELO_cNOME, MODELO_nID, MODELO_nVLR_VENDA, MODELO_nSTATUS, MODELO_nDESCONTO, MODELO_nQTD_ESTOQUE,
 COR_nID, MODELO.TAMANHO_nID,TAMANHO_cDESC, TAMANHO.TAMANHO_cTAMANHO AS descTamanho, MODELO.PRODUTO_nID, fn_buscaDescCor(COR_nID) as descCor, fn_buscaHexCor(COR_nID) as hexCor FROM MODELO
        INNER JOIN PRODUTO ON PRODUTO.PRODUTO_nID = MODELO.PRODUTO_nID
        INNER JOIN TAMANHO ON MODELO.TAMANHO_nID = TAMANHO.TAMANHO_nID
             WHERE PRODUTO_cSTATUS LIKE 'Ativo' and MODELO_nSTATUS like 'Ativo' and 
               MODELO_nQTD_ESTOQUE > 0 and PRODUTO.PRODUTO_nID

    